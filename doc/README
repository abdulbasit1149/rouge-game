*************************************************************************************************
Abdul Basit
ID: 0930431
CIS*2500
Assignment #3: Rough Video Game

*************************************************************************************************
Compilation: 
 $ make
 
 -'make' is an system which searches within the current directory for a file called 'Makefile' and runs the
 code within in.
 -The 'Makefile' target will be to make an a.out file as its target. It will accomplish this by 
 using gcc, with the -c flag to make .o files. Finally, it will combine all the .o files into one
 exeutable.

 $ make clean

 -'clean' is an phony target, that will run the commands: 
 	rm *.o
	rm a.out  
-to delete all the .o files and the exeutable.

*************************************************************************************************
Usage:
 -When the user runs the program according to the specification above, the program begins by verifying
	 the command line arguments entered by the user. 
		Ex. make
 -After the program receives the proper command line arguments, it begin by going through the file to count the number of elements and total number of rooms.
 -Next, it will use the function malloc to just enough memory on the heap for the total number of rooms and game elements
 -Then, it will parse the file and extract all the information and save them into the proper struct
 -Once, it is done with the file, the program will close the file
 -The program will get the structs ready to be used with ncurses, by ensuring each room has their proper x, y location relative to their sizes. All the game elements will obtain new x and y values relative to their rooms x and y. 
-After all the preparations are done, the program will launch ncurses and check if the rooms will fit on the screen, if not, it will terminate ncurses.

-The game will run, allowing the user to control a hero and be able to collect gold, items, potions. Be able to fight monsters and maybe even die!. Also, the hero will be able to go from room to room by using dynaminc hallways.If the player goes over a staircase and or the user presses 'q', and or its health is below one, the game will end.

-Once the game has ended, the program will free all the memory and return 0.

*************************************************************************************************
Testing:

		10X10 de2 g2,2 m4,4 h6,6 a8,8
		11X11 de3
		12X12 de4
		13X13 de5
		14X14 de6
		15X15 de7 z4,5

		-The is the decription of the first test file from assignment two. Checks to see, if the code will work on the test case it will be marked on.

		10X10 de2 ds2 dn4 dw7 g2,2 m4,4 h6,6 a8,8
		14X14 de6 dw3 M6,6 p1,1 p1,2 p1,3
		16X12 de3 ds6 m5,5 w1,1 W9,9 e10,10 w10,11 w11,10 w11,11
		14X16 de4 ds8 z2,4 g1,1 g1,2 g1,3 g1,4 G6,6
		10X18 de5 dn2 ds2 m6,6 m9,9
		8X15 de7 dw3 z4,5 m7,8 m2,12

		-This is the decription of the second test file from assignment two, with modification to the room x,y, to check if it would work on my laptop.

		10X10 dn0 de0 ds0 dw0 h0,0
		10X10 dn0 de0 ds0 dw0
		10X10 dn0 de0 ds0 dw0
		10X10 dn0 de0 ds0 dw0
		10X10 dn0 de0 ds0 dw0
		10X10 dn0 de0 ds0 dw0

		-This test case, which to check if two doors were on the same x, and or y axis would the hallway algorithm still work.

		10X15 de2 dn8 ds2 dw1 h0,0 p3,4 p1,6 p2,4 W2,0 w7,8 e9,5 g7,6 g3,6 G1,4
		11X15 de3 dw1 m4,7 a2,9 m5,9 m9,11 m1,12 W2,0 w7,8 e9,5 g7,6 g3,6 G1,4
		12X15 de4 m4,7 m2,9 m5,9 a9,11 m1,12 W2,0 w7,8 e9,5 g7,6 g3,6 G1,4
		13X15 ds12 m4,7 m2,9 m5,9 z9,11 m1,12 W2,0 w7,8 e9,5 g7,6 g3,6 G1,4
		14X15 dn6 m4,7 m2,9 z5,9 m9,11 m1,12 W2,0 w7,8 e9,5 g7,6 g3,6 G1,4
		15X15 dn7 dw9 m4,7 a2,9 m5,9 m9,11 m1,12 W2,0 w7,8 e9,5 g7,6 g3,6 G1,4

		-To test the maximum limit of my program, and was it capable to draw the objects without any problems

*************************************************************************************************
Known limitations:
	-The text file must be exactly in that form by not having any extra space at the very end of a file, because it will lead to extra mallocs and a waste of memory

	-If room 2 and 3 are too long in the y direction, and room 4 ,5 are too long in the x direction, this will lead to the rooms overlaping and causing programs for user movement

	-If within the working directory you have a file which was created from seg. fault (a.out.stackdump) and you try to run the 'make clean' command.  It will not erase that core dump file.  
	
*************************************************************************************************
References:

https://viget.com/extend/game-programming-in-c-with-the-ncurses-library
	-Teaches how game should be made with the ncurses library

http://stackoverflow.com/questions/14639765/how-do-i-redefine-a-color-pair-in-ncurses 
	-To implement colour into the game

*************************************************************************************************
